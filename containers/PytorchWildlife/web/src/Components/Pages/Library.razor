@page "/library"
@rendermode InteractiveServer
@inject IHttpClientFactory HttpClientFactory
@inject ILogger<Library> Logger
@using Microsoft.AspNetCore.Components.QuickGrid

@implements IDisposable
@using Microsoft.EntityFrameworkCore
@using Homebase.DataAccess
@inject IDbContextFactory<WildlifeContext> DbFactory

<PageTitle>VidID - Library</PageTitle>

<h1>Vid Classifier</h1>

<CheckStatus />

<div>
    <h2>Library</h2>
    @if (_context is null)
    {
        <p>@libraryMessage</p>
    }
    else
    {
        <div class="grid">
            <QuickGrid Items="@_context.VideoStatusAnimalConfidences">
                <PropertyColumn Title="Name" Property="@( v => v.VideoName)" Sortable="true" />
                <PropertyColumn Title="Status" Property="@( v => v.Status)" Sortable="true" />
                <PropertyColumn Title="Animal Name" Property="@( v => v.AnimalName)" Sortable="true" />
                <PropertyColumn Title="Confidence" Property="@( v => v.AverageConfidence)" Sortable="true" />
            </QuickGrid>
        </div>
    }
</div>

@code {
    private string libraryMessage = "Retrieving Library...";
    private WildlifeContext? _context;
    private HttpClient? _client;
    protected override async Task OnInitializedAsync()
    {
        _context = await DbFactory.CreateDbContextAsync();
        _client = HttpClientFactory.CreateClient("vidservice");
    }
    public void Dispose()
    {
        _context?.Dispose();
        Logger.LogInformation("Library page disposed");
    }   
}